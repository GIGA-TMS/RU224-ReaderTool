package scannel.decoder;

import java.math.BigInteger;
import java.util.ArrayList;

import scannel.reader.MyLogger;

public class Spec2000Decoder {
	
	public final static String data1 = "1E002821084200600030040000080000002800003464A0D77CF9E6A40E3E0430C74C30B72C37A9011480C2461605854D4A93152831E31C71E79C30D35A95243831A84346832C31E31C72E2A158420CB0CB8C71CB80000000000000000000B8C1002E040040E4A0430C74C30B72C37A85610832C32E31C72E0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001F6000022E74";
	public final static String data2 = "1E002821084200600030040000080000002800003464A0D77CF9E6A40E3E0430C74C30B72C37A9011480C2461605854D4A93152831E31C71E79C30CB8A95243831A84346832C31E31C72E2A158420CB0CB8C71CB8000000000000000000017AA002E040040E4A0430C74C30B72C37A85610832C32E31C72E0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001F6000022E74";
	public final static String data3 = "1E002821084200600030040000080000002800003464A0D77CF9E6A40E3E0430C74C30B72C37A9011480C2461605854D4A93152831E31C71E79C30C75A95243831A84346832C31E31C72E2A158420CB0CB8C71CB8000000000000000000027A2002E040040E4A0430C74C30B72C37A85610832C32E31C72E0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001F6000022E74";
	public final static String data4 = "1E002821084200600030040000080000002800003464A0D77CF9E6A40E3E0430C74C30B72C37A9011480C2461605854D4A93152831E31C71E79C30CF8A95243831A84346832C31E31C72E2A158420CB0CB8C71CB800000000000000000009B5F002E040040E4A0430C74C30B72C37A85610832C32E31C72E0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001F6000022E74";
	public final static String data5 = "1E002821084200600030040000080000002800003464A0D77CF9E6A40E3E0430C74C30B72C37A9011480C2461605854D4A93152831E31C71E79C30CF2A95243831A84346832C31E31C72E2A158420CB0CB8C71CB800000000000000000008627002E040040E4A0430C74C30B72C37A85610832C32E31C72E0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001F6000022E74";
	
	
	public Spec2000Decoder() {
		
	}

	public static void parseBirthRecord(String dataStr) {
		if (dataStr == null) {
			MyLogger.printLog("Null string...");
			return;
		}
		
		if (dataStr.length() != 384) {
			MyLogger.printLog("Incorrect string length: "+dataStr.length());
			return;
		}
		
		String birthRecord = dataStr.substring(32, 192);
		String record = birthRecord.substring(8);
		for (int i=0; i<38; i++) {
			String temp = record.substring(i*4, (i+1)*4);
			if (temp.equals("0000")) {
				record = record.substring(0, i*4);
				break;
			}
		}
		int l = record.length()*4;
		String binaryStr = String.format("%"+l+"s", new BigInteger(record,16).toString(2)).replace(" ", "0");
		
		ArrayList<String> strList = new ArrayList<String>();
		for (int i=0; (i+1)*6<=binaryStr.length(); i++) {
			String temp = binaryStr.substring(i*6, (i+1)*6);
			if (temp.equals("000000")) {
				break;
			} else {
				strList.add(temp);
			}
		}
		
		String result = "";
		for (int i=0; i<strList.size(); i++) {
			result += parse6bitAsciiStr(strList.get(i));
		}
		
		MyLogger.printLog("=========================");
//		MyLogger.printLog(result);
		String[] items = result.split("\\*");
		for (int i=0; i<items.length; i++) {
			MyLogger.printLog(items[i]);
		}
	}
	
	private static String parse6bitAsciiStr(String str) {
		if (str == null || str.length() != 6) {
			MyLogger.printLog("Cannot translate incorrect 6-bit ascii string...");
			return null;
		}
		
		if(str.equals("000000")) {
			return null;
		}
		
		String binary;
		if (str.startsWith("0")) {
			binary = "01"+str;
		} else if (str.startsWith("1")) {
			binary = "00"+str;
		} else {
			MyLogger.printLog("Unknown string...");
			return null;
		}
		
		return new Character((char) Integer.parseInt(binary, 2)).toString();
	}
}
